[5:58 PM] Patwari, Vishrut




module RISC_V_control_unit (ALUSrc,

MemtoReg,

RegDst,

RegWrite,

MemRead,

MemWrite,

Branch,

Opcode,

CLK,

Reset

);

 

output ALUSrc;

output MemtoReg;

output RegDst;

output RegWrite;

output MemRead;

output MemWrite;

output Branch;

 

input [6:0] Opcode; // Change the width of Opcode input to 7 bits for RISC-V

input CLK;

input Reset;

 

reg ALUSrc;

reg MemtoReg;

reg RegDst;

reg RegWrite;

reg MemRead;

reg MemWrite;

reg Branch;

 



always @ (posedge CLK)

begin

$display("The opcode is %d", Opcode);

case (Opcode)

    7'b0110011: // R-type

    begin

        $display("R-type");

        ALUSrc = 0;

        MemtoReg = 0;

        RegDst = 1;

        RegWrite = 1;

        MemRead = 0;

        MemWrite = 0;

        Branch = 0;

    end

    7'b0000011: // LW

    begin

        $display("LW");

        ALUSrc = 1;

        MemtoReg = 1;

        RegDst = 0;

        RegWrite = 1;

        MemRead = 1;

        MemWrite = 0;

        Branch = 0;

    end

    7'b0100011: // SW

    begin

        $display("SW");

        ALUSrc = 1;

        MemtoReg = 0; // X (any value)

        RegDst = 0; // X (any value)

        RegWrite = 0;

        MemRead = 0;

        MemWrite = 1;

        Branch = 0;

    end

    7'b1100011: // BEQ

    begin

        $display("BEQ");

        ALUSrc = 0;

        MemtoReg = 0; // X (any value)

        RegDst = 0; // X (any value)

        RegWrite = 0;

        MemRead = 0;

        MemWrite = 0;

        Branch = 1;

    end

    default:

    begin

        $display(" Wrong Opcode %d ", Opcode);

    end

endcase

 

end

 

endmodule






